name: 'ðŸš€ Build and Publish jellyfin-ffmpeg'

on:
  release:
    types:
      - released

jobs:
  build_publish_debian:
    uses: ./.github/workflows/_meta.yaml
    with:
      distro: 'debian'
      codenames: '["bullseye", "bookworm"]'
      architectures: '["arm64"]'
      release: true
    secrets:
      deploy-host: ${{ secrets.DEPLOY_HOST }}
      deploy-user: ${{ secrets.DEPLOY_USER }}
      deploy-key: ${{ secrets.DEPLOY_KEY }}

  build_publish_ubuntu:
    uses: ./.github/workflows/_meta.yaml
    with:
      distro: 'ubuntu'
      codenames: '["focal", "jammy"]'
      architectures: '["arm64"]'
      release: true
    secrets:
      deploy-host: ${{ secrets.DEPLOY_HOST }}
      deploy-user: ${{ secrets.DEPLOY_USER }}
      deploy-key: ${{ secrets.DEPLOY_KEY }}

  maintain_repository:
    name: Maintain Repository
    runs-on: ubuntu-latest
    needs:
      - build_publish_debian
      - build_publish_ubuntu
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        arrays: [
          {distro: 'debian', codename: 'bullseye'},
          {distro: 'debian', codename: 'bookworm'},
          {distro: 'ubuntu', codename: 'focal'},
          {distro: 'ubuntu', codename: 'jammy'}
        ]
    steps:
      - name: Sync mirrors and update symlinks
        uses: appleboy/ssh-action@55dabf81b49d4120609345970c91507e2d734799 # v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script_stop: true
          script: |-
            set -o errexit
            set -o xtrace
            tag="${{ github.event.release.tag_name }}"
            version="${tag#v}"
            basename="jellyfin-ffmpeg*_${version}-${{ matrix.arrays.codename }}"
            find /srv/repository/releases/server/${{ matrix.arrays.distro }}/ -type l -name "jellyfin-ffmpeg*_*" -exec rm {} \;
            find /srv/repository/releases/server/${{ matrix.arrays.distro }}/versions/jellyfin-ffmpeg/${version} -type f -name "${basename}_*.deb" | while read file; do
              reprepro -b /srv/repository/${{ matrix.arrays.distro }} --export=never --keepunreferencedfiles includedeb ${{ matrix.arrays.codename }} ${file}
            done
            reprepro -b /srv/repository/${{ matrix.arrays.distro }} deleteunreferenced
            reprepro -b /srv/repository/${{ matrix.arrays.distro }} export
